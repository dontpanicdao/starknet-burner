var t=Object.defineProperty,e=(e,r,s)=>(((e,r,s)=>{r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[r]=s})(e,"symbol"!=typeof r?r+"":r,s),s),r=(t,e,r)=>{if(!e.has(t))throw TypeError("Cannot "+r)},s=(t,e,s)=>(r(t,e,"read from private field"),s?s.call(t):e.get(t));const { connect:i } = require('worktop/ws');const { reply:a } = require('worktop/response');var n,o=class{constructor(t,r){e(this,"DEBUG"),this.setup&&t.blockConcurrencyWhile((()=>this.setup(t,r))),this.DEBUG=!1}async connect(t){let e=i(t);if(e)return e;let{0:r,1:s}=new WebSocketPair;function a(){s.close()}return s.accept(),s.addEventListener("close",a),s.addEventListener("error",a),this.onconnect&&await this.onconnect(t,s),new Response(null,{status:101,statusText:"Switching Protocols",webSocket:r})}async fetch(t,e){try{let r=new Request(t,e);return await this.receive(r)}catch(t){let e=this.DEBUG&&t.stack;return new Response(e||"Error with receive",{status:400})}}},c=class{constructor(t){e(this,"id"),((t,e,r)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,r)})(this,n,void 0),this.id=t.id.toString(),((t,e,s,i)=>{r(t,e,"write to private field"),i?i.call(t,s):e.set(t,s)})(this,n,t.storage)}async fetch(t,e){try{let r=new Request(t,e),{pathname:i}=new URL(r.url);if("get"===i){let[t,e]=await r.json(),i=await s(this,n).get(t,e);if(i instanceof Map){let t=[...i];return a(200,{results:t})}return a(200,{result:i})}if("list"===i){let[t]=await r.json(),e=[...await s(this,n).list(t)];return a(200,{results:e})}if("put"===i){let[t,e,i]=await r.json(),o=t&&"object"==typeof t;o&&(i=e),i=i||{};let{overwrite:c=!0,...l}=i;if(!c){let e=o?Object.keys(t):t,r=await s(this,n).get(e);if(r instanceof Map&&r.size>0||null!=r)return a(409,{error:"cannot overwrite existing key"})}return o?await s(this,n).put(t,l):await s(this,n).put(t,e,l),a(200,{result:!0})}if("delete"===i){let[t,e]=await r.json(),i=await s(this,n).delete(t,e);return a(200,{result:i})}return a(400)}catch(t){let e=String(t);return a(500,{error:e})}}};n=new WeakMap;exports.Actor=o;exports.DataGroup=c;